{
	// Place your lens-ui workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"rc-component": {
		"scope": "typescript,typescriptreact",
		"prefix": "rc-component",
		"body": [
			"import React from 'react';",
			"import clsx from 'clsx';",
			"import styles from './${1:element}.module.scss';",
			"import useTheme from '../../../hooks/use-theme';",
			"const ${1:element}:React.FC<I${1:element}Props> = ({",
			"className, testingID, id, children, intent = 'primary', type = 'solid', ...props",
			"}) => {",
			"const [theme] = useTheme();",
			"",
			"return (",
			"<div",
			"{...props}",
			"id={id}",
			"data-testid={testingID}",
			"data-lens-intent={intent}",
			"data-lens-element=\"${2:id}\"",
			"className={clsx(",
			"styles.${2:id},",
			"styles[theme],",
			"styles[intent],",
			"styles[type],",
			"className,",
			")}",
			">",
			"{children}",
			"</div>",
			");",
			"}",
			"",
			"export default $1;"
		],
		"description": "rc-component"
	}
}